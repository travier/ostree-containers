name: "Build container images"

on:
  pull_request:
    branches:
      - main
    paths:
      - "*.yaml"
      - ".github/workflows/*.yml"
  push:
    branches:
      - main
    paths:
      - "*.yaml"
      - ".github/workflows/*.yml"
  schedule:
    - cron:  '0 0 * * MON'

permissions: read-all

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs for
# pull requests only.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  REGISTRY: "quay.io/fedora-ostree-containers"

jobs:
  build-push-image:
    strategy:
      matrix:
        image: ['base', 'base-minimal', 'minimal', 'nginx']

    runs-on: ubuntu-latest
    container:
      image: quay.io/fedora-ostree-desktops/buildroot:latest
      options: "--user root --privileged -v /var/tmp:/var/tmp -v /tmp:/tmp"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build image
        run: |
          rpm-ostree compose image --initialize --format=ociarchive ${{ matrix.image }}.yaml ${{ matrix.image }}.ociarchive

      - name: Copy image to local storage
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
        run: |
          skopeo copy oci-archive:${{ matrix.image }}.ociarchive containers-storage:${{ matrix.image }}:latest

      - name: Push to Container Registry
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ matrix.image }}
          registry: ${{ env.REGISTRY }}
          tags: latest

      - uses: sigstore/cosign-installer@v3.2.0
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'

      - name: Login to Container Registry
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
        run: |
          podman login ${{ env.REGISTRY }} -u ${{ secrets.BOT_USERNAME }} -p ${{ secrets.BOT_SECRET }} --verbose
        env:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}

      - name: Sign container image
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ matrix.image }}:latest
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
